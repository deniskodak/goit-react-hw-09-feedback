{"version":3,"sources":["components/FeedbackOptions/styled.js","redux/stat/statActions.js","redux/stat/statReducer.js","redux/stat/statSelectors.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/styled.js","components/Statistics/Statistics.js","components/Section/styled.js","components/Section/Section.js","components/ErrorMessage/styled.js","components/ErrorMessage/ErrorMessage.js","components/ResetButton/ResetButton.js","App.js","redux/store.js","index.js"],"names":["Button","styled","button","Ul","ul","Li","li","statActions","setGoodStat","createAction","setNeutralStat","setBadStat","setReset","initialState","good","neutral","bad","stats","createReducer","state","combineReducers","getGoodStat","getNeutralStat","getBadStat","getTotal","createSelector","statSelectors","getStats","getPositiveFeedbackPercentage","total","toFixed","FeadbackOptions","dispatch","useDispatch","useSelector","slicedArray","Object","keys","slice","onLeaveFeedback","e","target","textContent","alert","map","stat","index","className","type","onClick","Statistics","positivePercentage","Section","section","H2","h2","SectionWithTitle","title","children","H3","h3","ErrorMessage","message","styles","padding","width","background","ResetButton","style","App","totalStats","authPersistConfig","key","storage","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","persistReducer","statReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.c4e883f3.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n  width: 100px;\r\n  color: white;\r\n  background: transparent;\r\n  font-weight: 600;\r\n\r\n  &.good {\r\n    color: green;\r\n\r\n    &:active {\r\n      background-color: green;\r\n    }\r\n  }\r\n\r\n  &.neutral {\r\n    color: gray;\r\n\r\n    &:active {\r\n      background-color: gray;\r\n    }\r\n  }\r\n\r\n  &.bad {\r\n    color: red;\r\n\r\n    &:active {\r\n      background-color: red;\r\n    }\r\n  }\r\n\r\n  &:active {\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst Ul = styled.ul`\r\n  list-style: none;\r\n  display: flex;\r\n`;\r\n\r\nconst Li = styled.li`\r\n  &:not(:last-child) {\r\n    margin-right: 10px;\r\n  }\r\n`;\r\nexport { Button, Ul, Li };\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst setGoodStat = createAction(\"stat/setGoodStat\");\r\n\r\nconst setNeutralStat = createAction(\"stat/setNeutralStat\");\r\n\r\nconst setBadStat = createAction(\"stat/setBadStat\");\r\n\r\nconst setReset = createAction(\"stat/setReset\");\r\n\r\nconst statActions = {\r\n  setGoodStat,\r\n  setNeutralStat,\r\n  setBadStat,\r\n  setReset,\r\n};\r\n\r\nexport default statActions;\r\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\r\n\r\nimport statActions from \"./statActions\";\r\n\r\nconst initialState = {\r\n  good: 0,\r\n  neutral: 0,\r\n  bad: 0,\r\n};\r\n\r\nconst stats = createReducer(initialState, {\r\n  [statActions.setGoodStat]: (state) => {\r\n    state.good++;\r\n  },\r\n  [statActions.setNeutralStat]: (state) => {\r\n    state.neutral++;\r\n  },\r\n  [statActions.setBadStat]: (state) => {\r\n    state.bad++;\r\n  },\r\n  [statActions.setReset]: () => initialState,\r\n});\r\n\r\nexport default combineReducers({\r\n  stats,\r\n});\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst getStats = (state) => state.stats;\r\nconst getGoodStat = (state) => state.stats.good;\r\nconst getNeutralStat = (state) => state.stats.neutral;\r\nconst getBadStat = (state) => state.stats.bad;\r\n\r\nconst getTotal = createSelector(\r\n  [getGoodStat, getNeutralStat, getBadStat],\r\n  (good, neutral, bad) => good + neutral + bad\r\n);\r\n\r\nconst getPositiveFeedbackPercentage = createSelector(\r\n  [getGoodStat, getTotal],\r\n  (good, total) => {\r\n    const ratio = (good / total) * 100;\r\n    return +ratio.toFixed(0);\r\n  }\r\n);\r\n\r\nconst statSelectors = {\r\n  getStats,\r\n  getGoodStat,\r\n  getNeutralStat,\r\n  getBadStat,\r\n  getTotal,\r\n  getPositiveFeedbackPercentage,\r\n};\r\n\r\nexport default statSelectors;\r\n","import React from \"react\";\r\nimport { Button, Ul, Li } from \"./styled\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { statActions, statSelectors } from \"../../redux/stat\";\r\n\r\nexport default function FeadbackOptions() {\r\n  const dispatch = useDispatch();\r\n\r\n  const stats = useSelector(statSelectors.getStats);\r\n\r\n  const statsArray = Object.keys(stats);\r\n  const slicedArray = statsArray.slice(0, 3);\r\n\r\n  const onLeaveFeedback = (e) => {\r\n    switch (e.target.textContent) {\r\n      case \"good\":\r\n        dispatch(statActions.setGoodStat());\r\n        break;\r\n      case \"neutral\":\r\n        dispatch(statActions.setNeutralStat());\r\n        break;\r\n      case \"bad\":\r\n        dispatch(statActions.setBadStat());\r\n        break;\r\n      default:\r\n        alert(\"Oops, something went wrong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Ul>\r\n      {slicedArray.map((stat, index) => {\r\n        return (\r\n          <Li key={index}>\r\n            <Button className={stat} type=\"button\" onClick={onLeaveFeedback}>\r\n              {stat}\r\n            </Button>\r\n          </Li>\r\n        );\r\n      })}\r\n    </Ul>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nconst Ul = styled.ul`\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n`;\r\n\r\nconst Li = styled.li`\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n`;\r\n\r\nexport { Ul, Li };\r\n","import React from \"react\";\r\nimport { Ul, Li } from \"./styled\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { statSelectors } from \"../../redux/stat\";\r\n\r\nexport default function Statistics() {\r\n  const total = useSelector(statSelectors.getTotal);\r\n  const positivePercentage = useSelector(\r\n    statSelectors.getPositiveFeedbackPercentage\r\n  );\r\n  const stats = useSelector(statSelectors.getStats);\r\n\r\n  return (\r\n    <Ul>\r\n      <Li>Good: {stats.good}</Li>\r\n      <Li>Neutral: {stats.neutral}</Li>\r\n      <Li>Bad: {stats.bad}</Li>\r\n      <Li>Total: {total}</Li>\r\n      <Li>Positive feedback: {positivePercentage}% </Li>\r\n    </Ul>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nconst Section = styled.section`\r\n  padding: 20px 40px;\r\n`;\r\nconst H2 = styled.h2`\r\n  margin: 0;\r\n  padding: 0 0 30px 0;\r\n`;\r\n\r\nexport { Section, H2 };\r\n","import React from \"react\";\r\nimport { Section, H2 } from \"./styled\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SectionWithTitle = ({ title, children }) => (\r\n  <Section>\r\n    <H2>{title}</H2>\r\n    {children}\r\n  </Section>\r\n);\r\n\r\nSectionWithTitle.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default SectionWithTitle;\r\n","import styled from \"styled-components\";\r\n\r\nconst H3 = styled.h3`\r\n  padding: 0;\r\n  margin: 0;\r\n  font-weight: 400;\r\n  font-size: 16px;\r\n`;\r\n\r\nexport default H3;\r\n","import React from \"react\";\r\nimport H3 from \"./styled\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ErrorMessage = ({ message }) => <H3>{message}</H3>;\r\n\r\nErrorMessage.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { statActions } from \"../../redux/stat\";\r\n\r\nconst styles = {\r\n  \"border-radius\": \"10px\",\r\n  \"margin-left\": \"40px\",\r\n  padding: \"10px\",\r\n  width: \"100px\",\r\n  background: \"transparent\",\r\n  \"font-weight\": \"600\",\r\n};\r\n\r\nexport default function ResetButton() {\r\n  const dispatch = useDispatch();\r\n\r\n  const onReset = () => dispatch(statActions.setReset());\r\n  return (\r\n    <button type=\"button\" onClick={onReset} style={styles}>\r\n      Reset all stats\r\n    </button>\r\n  );\r\n}\r\n","import React from \"react\";\nimport FeadbackOptions from \"./components/FeedbackOptions\";\nimport Statistics from \"./components/Statistics\";\nimport SectionWithTitle from \"./components/Section\";\nimport ErrorMessage from \"./components/ErrorMessage\";\nimport ResetButton from \"./components/ResetButton/ResetButton\";\nimport { statSelectors } from \"./redux/stat\";\nimport { useSelector } from \"react-redux\";\n\nexport default function App() {\n  const totalStats = useSelector(statSelectors.getTotal);\n\n  return (\n    <>\n      <SectionWithTitle title=\"Please leave your Feedback\">\n        <FeadbackOptions />\n      </SectionWithTitle>\n\n      <SectionWithTitle title=\"Statistics\">\n        {totalStats ? (\n          <Statistics />\n        ) : (\n          <ErrorMessage message=\"No feedback given\" />\n        )}\n      </SectionWithTitle>\n\n      <ResetButton />\n    </>\n  );\n}\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport { statReducer } from \"./stat\";\r\n\r\nconst authPersistConfig = {\r\n  key: \"stats\",\r\n  storage,\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: persistReducer(authPersistConfig, statReducer),\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./App\";\nimport { store, persistor } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}